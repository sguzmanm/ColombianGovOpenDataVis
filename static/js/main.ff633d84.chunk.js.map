{"version":3,"sources":["components/Component1/Component1.js","App.js","index.js"],"names":["Component1","props","navioRef","React","createRef","this","data","length","nv","navio","current","addAllAttribs","className","style","textAlign","ref","Component","App","state","url","choice","numPage","finished","loading","navioContainerRef","handleChange","bind","handleSubmit","ms","Promise","resolve","setTimeout","numRegistries","setState","localEnd","fetch","method","req","json","currentData","updateComponent","timeout","concat","event","target","value","type","checked","name","preventDefault","getData","choiceRenderer","numData","map","el","filter","isNaN","sum","reduce","a","b","parseFloat","average","Math","min","max","addElement","onSubmit","htmlFor","required","id","aria-describedby","placeholder","onChange","role","aria-hidden","content","show","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff633d84.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\nimport \"./Component1.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport navio from \"navio\";\r\n\r\n\r\nclass Component1 extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.navioRef = React.createRef();\r\n  }\r\n\r\n  updateComponent()\r\n  {\r\n    if(!this.props.data || this.props.data.length===0)\r\n      return;\r\n\r\n    let nv= navio(this.navioRef.current, 1000);\r\n\r\n    // NAVIO Step 2. Load your data!\r\n    nv.data(this.props.data);\r\n\r\n    // NAVIO Step 3. Detect your attributes (or load them manually)\r\n    nv.addAllAttribs();\r\n  }\r\n\r\n  render()\r\n  {\r\n    return(\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-6\" style={{textAlign:\"left\"}} ref={this.navioRef}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nComponent1.propTypes={\r\n  data:PropTypes.array\r\n};\r\n\r\nexport default Component1;","import React,{Component} from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Component1 from \"./components/Component1/Component1.js\";\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      data:[],\r\n      url:\"\",\r\n      choice:\"\",\r\n      numPage:1,\r\n      finished:false,\r\n      loading:false\r\n    };\r\n\r\n    this.navioContainerRef = React.createRef();\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);    \r\n  }\r\n\r\n  timeout(ms) {\r\n      return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  async getData(){\r\n    const numRegistries=100\r\n    this.setState({\r\n      data:[],\r\n      finished:false\r\n    })\r\n\r\n    let localEnd=false\r\n    try{\r\n      while(!localEnd)\r\n      {\r\n        let req=await fetch(`${this.state.url}?$limit=${numRegistries}&$offset=${(this.state.numPage-1)*numRegistries}`,{\r\n          method:\"GET\"\r\n        });\r\n\r\n        let currentData=await req.json()\r\n\r\n        if(currentData.length===0)\r\n        {\r\n          localEnd=true;\r\n          this.setState({\r\n            loading:false,\r\n            finished:true\r\n          })\r\n          this.navioContainerRef.current.updateComponent()\r\n        }\r\n        else\r\n        {\r\n          await this.timeout(100)\r\n          this.setState({\r\n            data:this.state.data.concat(currentData),\r\n            numPage:this.state.numPage+1\r\n          })\r\n        }\r\n      }\r\n    }\r\n    catch(e)\r\n    {\r\n      this.setState({\r\n        loading:false,\r\n        finished:true\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]:value\r\n    });\r\n  }\r\n    \r\n  handleSubmit(event) {\r\n    if(this.state.loading)\r\n      return;\r\n    event.preventDefault();\r\n    this.setState({\r\n      loading:true,\r\n      numPage:1    \r\n    })\r\n    this.getData();\r\n  }\r\n\r\n\r\n  render()\r\n  {\r\n    let choiceRenderer=null;\r\n    const numData=this.state.data.map(el=>{\r\n      return el[this.state.choice];\r\n    }).filter((el)=>!isNaN(el));\r\n\r\n    if(numData.length!==0 && this.state.finished && this.state.choice!==\"\" && this.state.data.length!==0)\r\n    {\r\n      const sum=numData.reduce((a,b) => {\r\n        return(\r\n          parseFloat(a) + parseFloat(b)\r\n        );\r\n      });\r\n      const average=  sum/ numData.length;\r\n      choiceRenderer=(\r\n        <div className=\"col-12 col-sm-6\">\r\n          <p>Sum {sum}</p>\r\n          <p>Average {average}</p>\r\n          <p>Min {Math.min(...numData) }</p>\r\n          <p>Max {Math.max(...numData) }</p>\r\n          <p>Numeric data {numData.length}</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    const addElement = (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"inputTitle\">Your dataset</label>\r\n          <input required name=\"url\" className=\"form-control\" id=\"inputTitle\" aria-describedby=\"help\" placeholder=\"Enter your url\" value={this.state.url} onChange={this.handleChange}/>\r\n          <small id=\"help\" className=\"form-text text-muted\">Please put the URL for getting data from DatosAbiertos</small>\r\n\r\n          <label htmlFor=\"inputChoice\">Your numeric field of choice</label>\r\n          <input name=\"choice\" className=\"form-control\" id=\"inputChoice\" aria-describedby=\"choiceHelp\" placeholder=\"Enter your numeric field of choice\" value={this.state.choice} onChange={this.handleChange}/>\r\n          <small id=\"choiceHelp\" className=\"form-text text-muted\">Please put the URL for getting data from DatosAbiertos</small>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          {this.state.loading?<span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>:<span></span>}\r\n          {this.state.loading?'Loading... Page '+this.state.numPage:'Get'}\r\n        </button>\r\n      </form>\r\n    );\r\n\r\n    // Display content\r\n    let content=null;\r\n    if(this.state.finished)\r\n    {\r\n      content=(\r\n        <div className=\"row\">\r\n          <Component1 show={this.state.finished} data={this.state.data} ref={this.navioContainerRef}/>\r\n          {choiceRenderer}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return(\r\n      <div className=\"App\">\r\n        <h1>Colombian Government Open Data Visualizator</h1>\r\n        <p>Hi, for this prototype all you need to do is input an API link from: <a href=\"https://datos.gov.co/\">Datos Abiertos</a> in the first field</p>\r\n        <p>If you want to get meaningful stats from  any numeric fields please fill the second field with the name of that component in the data</p>\r\n        <div className=\"container-fluid\">\r\n          {addElement}\r\n          {content}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}